#
# Master
#
- name: get current addons state
  command:
    cmd: microk8s.status --format yaml
  changed_when: no
  register: microk8s_status
  retries : 60
  delay: 5

- name: set current state fact
  set_fact:
    microk8s_status: "{{ microk8s_status.stdout | from_yaml }}"

- name: enable addons
  loop: "{{ microk8s_status.addons }}"
  loop_control:
    label: "{{ item.name }}"
  command:
    cmd: microk8s.enable {{ item.name }}{% if microk8s_plugins[item.name] != True %}:{{ microk8s_plugins[item.name] }}{% endif %}
  when:
    - item.status == 'disabled'
    - item.name in microk8s_plugins
    - microk8s_plugins[item.name]

- name: disable addons
  loop: "{{ microk8s_status.addons }}"
  loop_control:
    label: "{{ item.name }}"
  command:
    cmd: microk8s.disable {{ item.name }}
  when:
    - item.status == 'enabled'
    - item.name in microk8s_plugins
    - not microk8s_plugins[item.name]

#
# Add floating IP to CERT
#
- name: Configuring IP to csr.conf.template file
  lineinfile:
    path: /var/snap/microk8s/current/certs/csr.conf.template
    line: 'IP.6 = {{ hostvars[inventory_hostname]["ansible_ssh_host"] }}'
    insertafter: IP.2

- name: Resolving Dns
  shell: getent hosts {{ hostvars[inventory_hostname]["ansible_ssh_host"] }} | awk '{print $2}'
  register: dns1
  changed_when: False

- debug:
    msg: "{{ dns1.stdout }}"

- name: Configuring DNS to csr.conf.template file
  lineinfile:
    path: /var/snap/microk8s/current/certs/csr.conf.template
    line: DNS.6 = {{ dns1.stdout }}
    insertafter: DNS.5
